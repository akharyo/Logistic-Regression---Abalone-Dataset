install.packages("AppliedPredictiveModeling")
library(AppliedPredictiveModeling)
head(abalone)
data(abalone)
head(abalone)
dt <- subset(abalone, select = c(LongestShell, VisceraWeight, ShellWeight))
dt
fit <- glm(LongestShell~ShellWeight,data = abalone, family = binomial(link = "logit"))
fit
summary(fit)
ggplot(dt, aes(x=ShellWeight, y=LongestShell)) + geom_point() + stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
install.packages("ggplot2")
library(ggplot2)
ggplot(dt, aes(x=ShellWeight, y=LongestShell)) + geom_point() + stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
par(mar=c(4,4,1,1))
plot(dt$ShellWeight, dt$LongestShell)
curve(predict(fit, data.frame(ShellWeight=x),type="response"),add=TRUE)
knitr::opts_chunk$set(echo = TRUE)
help("CRAN.packages")
install.packages("CRAN")
library(CRAN)
install.packages("CRAN")
library(AppliedPredictiveModeling)
data("abalone")
head(abalone)
dt <- subset(abalone, select = c(LongestShell, VisceraWeight, ShellWeight))
dt
fit <- glm(LongestShell~ShellWeight,data = abalone, family = binomial(link = "logit"))
fit
summary(fit)
install.packages("ggplot2")
library(ggplot2)
ggplot(dt, aes(x=ShellWeight, y=LongestShell)) + geom_point() + stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
par(mar=c(4,4,1,1))
plot(dt$ShellWeight, dt$LongestShell)
curve(predict(fit, data.frame(ShellWeight=x),type="response"),add=TRUE)
unlink('Logistic Regression - Abalone Dataset Simple_cache', recursive = TRUE)
